# HTTP to HTTPS redirect
server {
    listen 80;
    server_name {{ item.server_name }};
    
    {% if item.redirect_www is defined and item.redirect_www and not item.server_name.startswith('www.') %}
    # Redirect www to non-www
    if ($host = www.{{ item.server_name }}) {
        return 301 https://{{ item.server_name }}$request_uri;
    }
    {% endif %}
    
    return 301 https://{{ item.server_name }}$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl http2;
    server_name {{ item.server_name }};

    # SSL Configuration - Auto-generated paths
    ssl_certificate {{ base_ssl_dir }}/{{ item.server_name }}/fullchain.pem;
    ssl_certificate_key {{ base_ssl_dir }}/{{ item.server_name }}/privkey.pem;
    
    # Include SSL hardening configuration
    include conf.d/ssl_hardening.conf;
    
    # Proxy all traffic to backend API
    location / {
        proxy_pass {{ item.backend_url | default('http://localhost:8000') }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
}
