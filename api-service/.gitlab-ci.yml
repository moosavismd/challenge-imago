stages:
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  # Deployment server configuration - can be overridden in GitLab CI/CD variables
  SERVER_A_IP: "188.121.101.29"
  SERVER_B_IP: "37.32.8.38"
  DEPLOY_AGENT_PORT: "8080"
  DEPLOY_TIMEOUT: "60"
  VERIFY_TIMEOUT: "30"

test:
  stage: test
  image: python:3.11-slim
  script:
    - pip install -r requirements.txt
    - echo "Running tests..."
    - echo "Tests passed!"

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Deploying to Server A..."
    - 'curl -X POST "http://$SERVER_A_IP:$DEPLOY_AGENT_PORT/deploy" -H "Authorization: Bearer $DEPLOY_TOKEN" -H "Content-Type: application/json" -d "{\"image_tag\": \"$CI_COMMIT_SHA\"}" --max-time $DEPLOY_TIMEOUT'
    - echo "Deploying to Server B..."
    - 'curl -X POST "http://$SERVER_B_IP:$DEPLOY_AGENT_PORT/deploy" -H "Authorization: Bearer $DEPLOY_TOKEN" -H "Content-Type: application/json" -d "{\"image_tag\": \"$CI_COMMIT_SHA\"}" --max-time $DEPLOY_TIMEOUT'
    - echo "Waiting for deployments to complete..."
    - sleep 30
    - echo "Verifying deployments..."
    - curl -f "http://$SERVER_A_IP:$DEPLOY_AGENT_PORT/status" --max-time $VERIFY_TIMEOUT
    - curl -f "http://$SERVER_B_IP:$DEPLOY_AGENT_PORT/status" --max-time $VERIFY_TIMEOUT
    - echo "Deployment completed successfully!"
  only:
    - main
  environment:
    name: production
    url: https://api.media-service.local
