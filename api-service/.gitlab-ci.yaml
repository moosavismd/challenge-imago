stages:
  - test
  - build
  - deploy

variables:
  SERVER_A_IP: "130.185.121.228"
  SERVER_B_IP: "130.185.123.76"
  DEPLOY_AGENT_PORT: "8080"

test:
  stage: test
  image: python:3.11-slim
  script:
    - pip install -r requirements.txt
    - python -m pytest test_api.py -v
    - python api-server.py &
    - sleep 5
    - curl -f http://localhost:8000/health
    - curl -f http://localhost:8000/
    - curl -f http://localhost:8000/random
    - curl -f http://localhost:8000/cons
    - pkill -f api-server.py
    - docker build -t test-media-service .
    - docker run -d --name test-container -p 8001:8000 test-media-service
    - sleep 5
    - curl -f http://localhost:8001/health
    - docker stop test-container && docker rm test-container

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Rolling deployment: Deploying to Server A first..."
    - curl -s -X POST "http://$SERVER_A_IP:$DEPLOY_AGENT_PORT/deploy" -H "Authorization: Bearer $DEPLOY_TOKEN" -H "Content-Type: application/json" -d "{\"image_tag\": \"$CI_COMMIT_SHA\", \"registry_image\": \"$CI_REGISTRY_IMAGE\"}" --max-time 60
    - echo "Waiting for Server A deployment to stabilize..."
    - sleep 30
    - echo "Verifying Server A deployment..."
    - curl -f "http://$SERVER_A_IP:8000/health" --max-time 30
    - echo "Server A deployment verified successfully!"
    - echo "Rolling deployment: Deploying to Server B..."
    - curl -s -X POST "http://$SERVER_B_IP:$DEPLOY_AGENT_PORT/deploy" -H "Authorization: Bearer $DEPLOY_TOKEN" -H "Content-Type: application/json" -d "{\"image_tag\": \"$CI_COMMIT_SHA\", \"registry_image\": \"$CI_REGISTRY_IMAGE\"}" --max-time 60
    - echo "Waiting for Server B deployment to stabilize..."
    - sleep 30
    - echo "Verifying Server B deployment..."
    - curl -f "http://$SERVER_B_IP:8000/health" --max-time 30
    - echo "Server B deployment verified successfully!"
    - echo "Rolling deployment completed successfully!"
    - echo "Both servers are now running the new version."
  only:
    - main
  environment:
    name: production
    url: https://api.media-service.local
